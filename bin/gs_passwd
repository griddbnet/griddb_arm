#!/usr/bin/python3 -B
# coding=UTF-8

import sys
import locale
#reload(sys)
#sys.setdefaultencoding(locale.getpreferredencoding())

import os
import csv
import hashlib
import getpass
import fcntl
import stat
from optparse import OptionParser

import util_server
util_server.install_sigint_handler()
(homedir,logdir) = util_server.get_required_env()

parser = OptionParser(usage="%prog USERNAME [-p PASSWORD]",
                      description="Change the GridDB administrator's password.",
            version="%prog [V5.0.00]")
parser.add_option("-p", "--password", dest="password",
                  help='A password prompt does not display.')
(options, args) = parser.parse_args()

if len(args) < 1:
    parser.error("AB0001: Specify the USERNAME.")
username = args[0]

filename = os.path.join(homedir, "conf/password")
with open(filename, 'r+') as file:
    try:
        fcntl.flock(file.fileno(), fcntl.LOCK_EX | fcntl.LOCK_NB)
    except(IOError):
        print("AB0101: Failed to lock file." +filename)
        sys.exit(1)

    csvReader = csv.reader(file)
    allPassword = {}
    for row in csvReader:
        allPassword[row[0]] = row[1]

    if username not in allPassword:
        print("AB0102: The USERNAME '" + username + "' does not exist.")
        sys.exit(1)

    if options.password is not None:
        password = options.password
    else:
        try:
            password = getpass.getpass()
            password2 = getpass.getpass("Retype password: ")
        except KeyboardInterrupt:
            print("")
            sys.exit(0)
        if password != password2:
            print("AB0103: The password mismatch.")
            sys.exit(1)

    if password == "":
        print("AB0104: The password cannnot contain any spaces.")
        sys.exit(1)
    digest = hashlib.sha256(util_server.strToBytes(password)).hexdigest()
    allPassword[username] = digest

    os.umask(0)
    tmpfilename = filename + ".tmp"
    with open(tmpfilename, 'w+') as tmpfile:
        csvWriter = csv.writer(tmpfile)
        for row in list(allPassword.items()):
            csvWriter.writerow(row);

    statinfo = os.stat(filename)
    os.chown(tmpfilename, statinfo[stat.ST_UID], statinfo[stat.ST_GID])
    os.chmod(tmpfilename, statinfo[stat.ST_MODE])

    os.rename(tmpfilename, filename)
