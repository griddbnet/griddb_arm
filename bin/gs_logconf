#!/usr/bin/python3 -B
# coding=UTF-8

import sys
import log
import os
import json
import copy
from optparse import OptionParser

import util_client
util_client.install_sigint_handler()
(homedir,logdir) = util_client.get_required_env()

parser = OptionParser(usage="%prog " + util_client.CLIENT_OPTIONS_USAGE
                                + " [CATEGORY LEVEL]",
                      description="Change the event log level.\
                                      If the argument is not specified, obtain the list of setting.", version="%prog [V5.0.00]")
util_client.add_client_options(parser)
(options, args) = parser.parse_args()
# REST通信時SSL接続を行うか判断 デフォルトのポート番号を設定
util_client.decide_use_ssl_and_port(options)

if options.username is None:
    print("A90001: Specify a user name and a password."+" (-u USER/PASS)")
    sys.exit(2)

log = log.logger(__file__, log.DEBUG)
log.info("%s start." % (__file__))
tmpoptions = copy.deepcopy(options)
tmpoptions.password = "***"
log.info("options="+str(tmpoptions)+" args="+str(args))

method = "GET"
path = "/node/trace"
data = None
category = ""
level = ""

if len(args) == 1 or len(args) > 2:
        print("A90103: Specify 'CATEGORY' and 'LEVEL'.")
        sys.exit(1)

if len(args) == 2:
    method = "POST"
    category = args[0]
    level = args[1]
    data = { "category": category,
             "level": level }

(res, code) = util_client.request_rest(method, path, data, options, log)
if res is not None and data is None:
    print(json.dumps(json.loads(res), sort_keys=True, indent=4))

#if code == 400:
#    print u"A90101: 存在しないカテゴリ名または出力レベルです。#(category="+category+" level="+level+")"
#    log.error("A90101: The category or level is not found.")
#    sys.exit(1)

if code != 200:
    log.error("A90102: failed to change/show log level.")
    sys.exit(1)

log.info("%s end." % (__file__))

